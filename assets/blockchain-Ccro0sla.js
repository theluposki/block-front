import{_ as w,r as u,h as S,c as M,o as h,i as T,j as m,a as i,b as k,f as B,v as D,u as _,t as I}from"./index-B0UYAhgC.js";const E={"json-container":"_json-container_1yqab_22","json-key":"_json-key_1yqab_26","json-string":"_json-string_1yqab_30","json-number":"_json-number_1yqab_34","json-boolean":"_json-boolean_1yqab_38","json-null":"_json-null_1yqab_42"},H=["innerHTML"],J={__name:"JsonViewer",props:{jsonText:Object},setup(a){const t=a,r=u(""),c=()=>({key:"color: #ffb86c;",string:"color: #50fa7b;",number:"color: #bd93f9;",boolean:"color: #8be9fd;",null:"color: #ff5555;"}),o=s=>{const l=c();return typeof s!="string"&&(s=JSON.stringify(s,null,2)),s=s.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;"),s.replace(/("(\\u[\da-fA-F]{4}|\\[^u"]|[^\\"])*"(\s*:)?|\b(true|false|null)\b|-?\d+(\.\d+)?([eE][+-]?\d+)?)/g,n=>{let e="";return/^"/.test(n)?/:$/.test(n)?e=l.key:e=l.string:/true|false/.test(n)?e=l.boolean:/null/.test(n)?e=l.null:e=l.number,`<span style="${e}">${n}</span>`})};return S(()=>{r.value=o(t.jsonText)}),(s,l)=>(h(),M("pre",{innerHTML:r.value,class:"json-container"},null,8,H))}},N={$style:E},y=w(J,[["__cssModules",N]]),q=()=>({index:1,hash:"0000",timestamp:Date.now(),data:{},lastHash:"0000"});function $(a){return new Worker("/block-front/assets/mineWorker-P_8xJmk6.js",{name:a==null?void 0:a.name})}const O=T("blockchain",()=>{const a=u([q()]),t=u(2),r=u(!1),c=u({}),o=u([]),s=u(null),l=u(0);let n=null;const e=f=>{t.value=f},d=f=>{a.value.push(f)};return{blockchain:a,MineMulti:()=>{r.value=!1,c.value={},o.value.forEach(p=>p.terminate()),o.value=[],s.value=Date.now(),l.value=0,n&&clearInterval(n),n=setInterval(()=>{l.value=Date.now()-s.value},100);const f=JSON.parse(JSON.stringify(a.value.at(-1)));let g=!1;const j=4;for(let p=0;p<j;p++){const b=new $;b.postMessage({lastBlock:f,difficulty:t.value,workerIndex:p}),b.onmessage=v=>{v.data&&(c.value=v.data),v.data.done&&!g&&(g=!0,d(v.data.newBlock),clearInterval(n),n=null,o.value.forEach(x=>x.terminate()),o.value=[])},o.value.push(b)}},StopMining:()=>{r.value=!0,o.value.forEach(f=>{f.postMessage("stop"),f.terminate()}),o.value=[],n&&(clearInterval(n),n=null)},setDifficulty:e,stop:r,currentHash:c,elapsedTime:l}}),V={class:"page-int"},W={class:"container"},C={class:"group-btns"},F={class:"green"},R={__name:"blockchain",setup(a){const t=O(),r=u(2),c=m(()=>t.blockchain),o=m(()=>t.currentHash),s=m(()=>(t.elapsedTime/1e3).toFixed(2)+" s"),l=()=>{t.setDifficulty(r.value)};return(n,e)=>(h(),M("div",V,[i("div",W,[e[3]||(e[3]=i("h3",{class:"title green"},"Blockchain",-1)),e[4]||(e[4]=i("p",{class:"red"},"proof of work",-1)),k(y,{"json-text":o.value},null,8,["json-text"]),e[5]||(e[5]=i("p",{class:"green"},"Nível de dificuldade",-1)),B(i("input",{type:"number","onUpdate:modelValue":e[0]||(e[0]=d=>r.value=d),class:"input",onKeyup:l,placeholder:"dificuldade",min:"0",max:"10"},null,544),[[D,r.value]]),i("div",C,[i("button",{class:"btn",onClick:e[1]||(e[1]=(...d)=>_(t).MineMulti&&_(t).MineMulti(...d))},"Mine"),i("button",{class:"btn",onClick:e[2]||(e[2]=(...d)=>_(t).StopMining&&_(t).StopMining(...d))},"Stop")]),i("p",F,"Tempo de mineração: "+I(s.value),1),k(y,{"json-text":c.value[c.value.length-1]},null,8,["json-text"])])]))}};export{R as default};
